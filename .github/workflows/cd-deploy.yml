#The provided CD configuration workflow ensures that on every push or pull request to the main branch, specifically affecting the deployment/web-service/** directory, the following actions are performed:

#The code is checked out.
#Python 3.9 is set up.
#Docker Compose is installed.
#Dependencies are installed in a virtual environment.
#Docker services are started.
#Unit tests are executed using pytest.
#Integration tests are executed using pytest.
#Docker services are stopped.
#This setup helps in automating the deployment process, ensuring that the application is tested thoroughly before being deployed.


name: CD Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'deployment/web-service/**'
  pull_request:
    branches:
      - main
    paths:
      - 'deployment/web-service/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start Docker services
        run: |
          cd mlops-mage
          chmod +x scripts/start.sh
          ./scripts/start.sh
        timeout-minutes: 5

      - name: Run unit tests
        run: |
          source venv/bin/activate
          pytest -v --tb=short

      - name: Run integration tests
        run: |
          source venv/bin/activate
          pytest -m integration -v --tb=short

      - name: Stop Docker services
        run: |
          cd mlops-mage
          docker-compose down
